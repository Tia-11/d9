{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matti\\\\Desktop\\\\d9\\\\src\\\\components\\\\CompanySearchResults.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport Job from \"./Job\";\nimport { useParams } from \"react-router-dom\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addToFavorites, removeFromFavorites } from '../redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CompanySearchResults = () => {\n  _s();\n\n  const [jobs, setJobs] = useState([]);\n  const params = useParams();\n  const favorites = useSelector(state => state.favorites);\n  const dispatch = useDispatch();\n  const isFavorite = favorites.includes(params.company);\n\n  const toggleFavorite = () => {\n    if (isFavorite) {\n      dispatch(removeFromFavorites(params.company));\n    } else {\n      dispatch(addToFavorites(params.company));\n    }\n  };\n\n  const baseEndpoint = \"https://strive-benchmark.herokuapp.com/api/jobs?company=\";\n  useEffect(() => {\n    getJobs(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const getJobs = async () => {\n    try {\n      const response = await fetch(baseEndpoint + params.company);\n\n      if (response.ok) {\n        const {\n          data\n        } = await response.json();\n        setJobs(data);\n      } else {\n        alert(\"Error fetching results\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        className: \"my-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"display-4\",\n          children: [\"Job posting for: \", params.company, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: toggleFavorite,\n            children: isFavorite ? 'Remove from Favorites' : 'Add to Favorites'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), jobs.map(jobData => /*#__PURE__*/_jsxDEV(Job, {\n          data: jobData\n        }, jobData._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CompanySearchResults, \"pRLhgdJ1vouxWvNhdjKMAhIessQ=\", false, function () {\n  return [useParams, useSelector, useDispatch];\n});\n\n_c = CompanySearchResults;\nexport default CompanySearchResults;\n\nvar _c;\n\n$RefreshReg$(_c, \"CompanySearchResults\");","map":{"version":3,"names":["useEffect","useState","Container","Row","Col","Job","useParams","useSelector","useDispatch","addToFavorites","removeFromFavorites","CompanySearchResults","jobs","setJobs","params","favorites","state","dispatch","isFavorite","includes","company","toggleFavorite","baseEndpoint","getJobs","response","fetch","ok","data","json","alert","error","console","log","map","jobData","_id"],"sources":["C:/Users/Matti/Desktop/d9/src/components/CompanySearchResults.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport Job from \"./Job\";\nimport { useParams } from \"react-router-dom\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addToFavorites, removeFromFavorites } from '../redux/actions';\n\nconst CompanySearchResults = () => {\n  const [jobs, setJobs] = useState([]);\n  const params = useParams();\n  const favorites = useSelector(state => state.favorites);\n  const dispatch = useDispatch();\n\n  const isFavorite = favorites.includes(params.company);\n\n  const toggleFavorite = () => {\n    if (isFavorite) {\n      dispatch(removeFromFavorites(params.company));\n    } else {\n      dispatch(addToFavorites(params.company));\n    }\n  };\n\n\n  const baseEndpoint = \"https://strive-benchmark.herokuapp.com/api/jobs?company=\";\n\n  useEffect(() => {\n    getJobs();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const getJobs = async () => {\n    try {\n      const response = await fetch(baseEndpoint + params.company);\n      if (response.ok) {\n        const { data } = await response.json();\n        setJobs(data);\n      } else {\n        alert(\"Error fetching results\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <Container>\n      <Row>\n      <Col className=\"my-3\">\n          <h1 className=\"display-4\">\n            Job posting for: {params.company}\n            <button onClick={toggleFavorite}>\n              {isFavorite ? 'Remove from Favorites' : 'Add to Favorites'}\n            </button>\n          </h1>\n          {jobs.map(jobData => (\n            <Job key={jobData._id} data={jobData} />\n          ))}\n        </Col>  \n      </Row>\n    </Container>\n  );\n};\n\nexport default CompanySearchResults;\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,iBAApC;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,cAAT,EAAyBC,mBAAzB,QAAoD,kBAApD;;;AAEA,MAAMC,oBAAoB,GAAG,MAAM;EAAA;;EACjC,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAMa,MAAM,GAAGR,SAAS,EAAxB;EACA,MAAMS,SAAS,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACD,SAAhB,CAA7B;EACA,MAAME,QAAQ,GAAGT,WAAW,EAA5B;EAEA,MAAMU,UAAU,GAAGH,SAAS,CAACI,QAAV,CAAmBL,MAAM,CAACM,OAA1B,CAAnB;;EAEA,MAAMC,cAAc,GAAG,MAAM;IAC3B,IAAIH,UAAJ,EAAgB;MACdD,QAAQ,CAACP,mBAAmB,CAACI,MAAM,CAACM,OAAR,CAApB,CAAR;IACD,CAFD,MAEO;MACLH,QAAQ,CAACR,cAAc,CAACK,MAAM,CAACM,OAAR,CAAf,CAAR;IACD;EACF,CAND;;EASA,MAAME,YAAY,GAAG,0DAArB;EAEAtB,SAAS,CAAC,MAAM;IACduB,OAAO,GADO,CAEd;EACD,CAHQ,EAGN,EAHM,CAAT;;EAKA,MAAMA,OAAO,GAAG,YAAY;IAC1B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,YAAY,GAAGR,MAAM,CAACM,OAAvB,CAA5B;;MACA,IAAII,QAAQ,CAACE,EAAb,EAAiB;QACf,MAAM;UAAEC;QAAF,IAAW,MAAMH,QAAQ,CAACI,IAAT,EAAvB;QACAf,OAAO,CAACc,IAAD,CAAP;MACD,CAHD,MAGO;QACLE,KAAK,CAAC,wBAAD,CAAL;MACD;IACF,CARD,CAQE,OAAOC,KAAP,EAAc;MACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACD;EACF,CAZD;;EAcA,oBACE,QAAC,SAAD;IAAA,uBACE,QAAC,GAAD;MAAA,uBACA,QAAC,GAAD;QAAK,SAAS,EAAC,MAAf;QAAA,wBACI;UAAI,SAAS,EAAC,WAAd;UAAA,gCACoBhB,MAAM,CAACM,OAD3B,eAEE;YAAQ,OAAO,EAAEC,cAAjB;YAAA,UACGH,UAAU,GAAG,uBAAH,GAA6B;UAD1C;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,EAOKN,IAAI,CAACqB,GAAL,CAASC,OAAO,iBACf,QAAC,GAAD;UAAuB,IAAI,EAAEA;QAA7B,GAAUA,OAAO,CAACC,GAAlB;UAAA;UAAA;UAAA;QAAA,QADD,CAPL;MAAA;QAAA;QAAA;QAAA;MAAA;IADA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAiBD,CAvDD;;GAAMxB,oB;UAEWL,S,EACGC,W,EACDC,W;;;KAJbG,oB;AAyDN,eAAeA,oBAAf"},"metadata":{},"sourceType":"module"}